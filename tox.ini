[tox]
envlist =
    py{37,38}{,-devdeps,-online}
    py37-figure-devdeps
    py38-figure
    build_docs
    codestyle
isolated_build = true
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.10

[testenv]
# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
changedir = .tmp/{envname}
# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data
    hypothesis: using hypothesis (both offline and online)
    figure: runs the figure test suite.
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest --pyargs ndcube {toxinidir}/docs --cov=ndcube --cov-config={toxinidir}/setup.cfg  --cov-report=xml
# Pass through the following environemnt variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS
extras =
    test
    animate
deps =
    pytest-xdist
    docutils
    devdeps: git+https://github.com/astropy/astropy
    devdeps: git+https://github.com/sunpy/sunpy
    devdeps: git+https://github.com/spacetelescope/gwcs

    # Figure tests need a tightly controlled environment
    figure: matplotlib==3.3.2
    figure-!devdeps: astropy==4.1.0
    figure-!devdeps: sunpy==2.0.3

commands =
    !online-!figure: {env:PYTEST_COMMAND} {posargs}
    online-!figure: {env:PYTEST_COMMAND} --remote-data=any {posargs}
    figure: python -c "import ndcube.tests.helpers as h; print(h.get_hash_library_name())"
    figure: {env:PYTEST_COMMAND} -m "mpl_image_compare" --mpl --remote-data=any --mpl-generate-summary=html --mpl-baseline-path=https://raw.githubusercontent.com/sunpy/sunpy-figure-tests/ndcube-main/figures/{envname}/ {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W -b html . _build/html {posargs}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --all-files
